{"title":"picoCTF 2022","uid":"bc15a35120add49422efba8f0a8eb06b","slug":"picoCTF2022","date":"2022-04-13T13:39:09.000Z","updated":"2022-04-13T14:58:34.751Z","comments":true,"path":"api/articles/picoCTF2022.json","keywords":"security, ctf, redteam, programming, hacking, python, golang, linux, windows, hackthebox, ctftime","cover":null,"content":"<p>picoCTF is the largest cybersecurity hacking competition for middle and high school students. Participants 13 years and older of all skill levels are encouraged to compete. Competitors must reverse-engineer, break, hack, decrypt, and think creatively and critically to solve the challenges and capture the digital flags.</p>\n<p><a href=\"https://ctftime.org/event/1578\">CTF Time</a></p>\n<h2 id=\"Forensics\"><a href=\"#Forensics\" class=\"headerlink\" title=\"Forensics\"></a>Forensics</h2><h3 id=\"St3g0\"><a href=\"#St3g0\" class=\"headerlink\" title=\"St3g0\"></a>St3g0</h3> <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">zsteg -a -v ./pico.flag.png <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> picoCTF<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">b1,rgb,lsb,xy       .. text: &quot;picoCTF&#123;7h3r3_15_n0_5p00n_1b8d71db&#125;$t3g0&quot;\n    00000000: 70 69 63 6f 43 54 46 7b  37 68 33 72 33 5f 31 35  |picoCTF&#123;7h3r3_15|<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">TIP</p>\n<p>As a result, the flag is located at b1,rgb,lsb,xy, where rgb means it uses RGB channel, lsb means least significant bit comes first, and xy means pixel iteration order is from left to right.</p>\n</div>\n<h3 id=\"Redaction-gone-wrong\"><a href=\"#Redaction-gone-wrong\" class=\"headerlink\" title=\"Redaction gone wrong\"></a>Redaction gone wrong</h3><p>In the PDF, select the highlighted part and copy it. Paste it in a text file to see the</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">picoCTF&#123;C4n_Y0u_S33_m3_fully&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"File-types\"><a href=\"#File-types\" class=\"headerlink\" title=\"File types\"></a>File types</h3><p>The point of this challenge is the type of files, you should check the file type every time with the file command</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">file</span> Flag.pdf\n   <span class=\"token operator\">|</span> \n   <span class=\"token operator\">|</span>-<span class=\"token operator\">></span> shell archive text\n\n$ <span class=\"token function\">cp</span> Flag.pdf Flag.sh\n$ <span class=\"token function\">chmod</span> +x Flag.sh\n$ Flag.sh\n   <span class=\"token operator\">|</span>\n   <span class=\"token operator\">|</span>-<span class=\"token operator\">></span> x - created lock directory _sh00046.\n       x - SKIPPING flag <span class=\"token punctuation\">(</span>file already exists<span class=\"token punctuation\">)</span>\n       x - removed lock directory _sh00046.\n\n<span class=\"token comment\"># After executing, a file called flag was generated</span>\n$ binwalk -e flag\n\n<span class=\"token comment\"># created a new folder called _flag.extracted</span>\n$ binwalk -e <span class=\"token number\">64</span>\n\n$ lzip -d -k flag\n\n$ lz4 -d flag.out flag2.out\n\n$ lzma -d -k flag2.lzma\n\n$ lzop -d -k flag2.lzop -o flag3\n\n$ lzip -d -k flag3\n\n$ xz -d -k flag4.xz\n\n<span class=\"token builtin class-name\">echo</span> 7069636f4354467b66316c656e406d335f6d406e3170756c407431306e5f6630725f3062326375723137795f33343765616536357d0a <span class=\"token operator\">|</span> xxd -r -p\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>picoCTF{f1len@m3_m@n1pul@t10n_f0r_0b2cur17y_347eae65}</p></blockquote>\n<hr>\n<h2 id=\"Reverse-Engineering\"><a href=\"#Reverse-Engineering\" class=\"headerlink\" title=\"Reverse Engineering\"></a>Reverse Engineering</h2><h3 id=\"file-run1\"><a href=\"#file-run1\" class=\"headerlink\" title=\"file-run1\"></a>file-run1</h3><p>We just need to execute the executable to obtain the flag.</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>picoCTF{U51N6_Y0Ur_F1r57_F113_9bc52b6b}</p></blockquote>\n<h3 id=\"file-run2\"><a href=\"#file-run2\" class=\"headerlink\" title=\"file-run2\"></a>file-run2</h3><p>This challenge provided an executable.</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>picoCTF{F1r57_4rgum3n7_be0714da}</p></blockquote>\n<h3 id=\"GDB-Test-Drive\"><a href=\"#GDB-Test-Drive\" class=\"headerlink\" title=\"GDB Test Drive\"></a>GDB Test Drive</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">chmod</span> +x gdbme\n$ gdb gdbme\n<span class=\"token punctuation\">(</span>gdb<span class=\"token punctuation\">)</span> layout asm\n<span class=\"token punctuation\">(</span>gdb<span class=\"token punctuation\">)</span> <span class=\"token builtin class-name\">break</span> *<span class=\"token punctuation\">(</span>main+99<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span>gdb<span class=\"token punctuation\">)</span> run\n<span class=\"token punctuation\">(</span>gdb<span class=\"token punctuation\">)</span> jump *<span class=\"token punctuation\">(</span>main+104<span class=\"token punctuation\">)</span>\n\ngdb➤  jump *<span class=\"token punctuation\">(</span>main+104<span class=\"token punctuation\">)</span>\nContinuing at 0x800132f.\npicoCTF<span class=\"token punctuation\">&#123;</span>d3bugg3r_dr1v3_72bd8355<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">[</span>Inferior <span class=\"token number\">1</span> <span class=\"token punctuation\">(</span>process <span class=\"token number\">543</span><span class=\"token punctuation\">)</span> exited normally<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>picoCTF{d3bugg3r_dr1v3_197c378a}</p></blockquote>\n<h3 id=\"patchme-py\"><a href=\"#patchme-py\" class=\"headerlink\" title=\"patchme.py\"></a>patchme.py</h3><p>If you look at the code, you will see that the password is hard coded</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">level_1_pw_check</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    user_pw <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please enter correct password for flag: \"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> user_pw <span class=\"token operator\">==</span> <span class=\"token string\">\"ak98\"</span> <span class=\"token operator\">+</span> \\\n                   <span class=\"token string\">\"-=90\"</span> <span class=\"token operator\">+</span> \\\n                   <span class=\"token string\">\"adfjhgj321\"</span> <span class=\"token operator\">+</span> \\\n                   <span class=\"token string\">\"sleuth9000\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Welcome back... your flag, user:\"</span><span class=\"token punctuation\">)</span>\n        decryption <span class=\"token operator\">=</span> str_xor<span class=\"token punctuation\">(</span>flag_enc<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"utilitarian\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>decryption<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"That password is incorrect\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>The password is: ak98-&#x3D;90adfjhgj321sleuth9000</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>picoCTF{p47ch1ng_l1f3_h4ck_c4a4688b}</p></blockquote>\n<h3 id=\"Safe-Opener\"><a href=\"#Safe-Opener\" class=\"headerlink\" title=\"Safe Opener\"></a>Safe Opener</h3><p>See this part of the code:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">openSafe</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> password<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">String</span> encodedkey <span class=\"token operator\">=</span> <span class=\"token string\">\"cGwzYXMzX2wzdF9tM18xbnQwX3RoM19zYWYz\"</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>encodedkey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sesame open\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Password is incorrect\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>Again, the password key is hardcoded with base64 encoding. We just need to base64 decode it:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> -n <span class=\"token string\">\"cGwzYXMzX2wzdF9tM18xbnQwX3RoM19zYWYz\"</span> <span class=\"token operator\">|</span> base64 -d<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>picoCTF{pl3as3_l3t_m3_1nt0_th3_saf3}</p></blockquote>\n<h3 id=\"bloat-py\"><a href=\"#bloat-py\" class=\"headerlink\" title=\"bloat.py\"></a>bloat.py</h3><p>This section checks the password:</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">arg133</span><span class=\"token punctuation\">(</span>arg432<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">if</span> arg432 <span class=\"token operator\">==</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">71</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">79</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">79</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">88</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">66</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">71</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">77</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">66</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">68</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n  <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">51</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">71</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">83</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">94</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">79</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">82</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">82</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">86</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">78</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>\\\na<span class=\"token punctuation\">[</span><span class=\"token number\">81</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">67</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">94</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">72</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">82</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">94</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">72</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">77</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">66</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">78</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">81</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>\\\na<span class=\"token punctuation\">[</span><span class=\"token number\">81</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">68</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">66</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">83</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    sys<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>These characters are basically passwords:</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">arg432 <span class=\"token operator\">==</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">71</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">79</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">79</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">88</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">66</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">71</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">77</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">66</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">68</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>Add this line to the code</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">71</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">79</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">79</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">88</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">66</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">71</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">77</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">66</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">68</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>password : happychance</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>picoCTF{d30bfu5c4710n_f7w_b8062eec}</p></blockquote>\n<h3 id=\"Fresh-Java\"><a href=\"#Fresh-Java\" class=\"headerlink\" title=\"Fresh Java\"></a>Fresh Java</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token char\">'o'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Invalid key\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token char\">'c'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Invalid key\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token char\">'i'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Invalid key\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token char\">'p'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Invalid key\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>Again, hardcoded key, by concating it, we will get the flag.</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>picoCTF{700l1ng_r3qu1r3d_738cac89}</p></blockquote>\n<h3 id=\"Bbbbloat\"><a href=\"#Bbbbloat\" class=\"headerlink\" title=\"Bbbbloat\"></a>Bbbbloat</h3><p>From the decompiled code, we can see after it was for favorite number, it performs some kind of comparison</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>local_48 <span class=\"token operator\">==</span> <span class=\"token number\">549255</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t__s <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">FUN_00101249</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>local_38<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">fputs</span><span class=\"token punctuation\">(</span>__s<span class=\"token punctuation\">,</span><span class=\"token constant\">stdout</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">putchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">free</span><span class=\"token punctuation\">(</span>__s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">./bbbbloat\nWhat's my favorite number? <span class=\"token number\">549255</span>\npicoCTF<span class=\"token punctuation\">&#123;</span>cu7_7h3_bl047_695036e3<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>picoCTF{cu7_7h3_bl047_695036e3}</p></blockquote>\n<h3 id=\"unpackme\"><a href=\"#unpackme\" class=\"headerlink\" title=\"unpackme\"></a>unpackme</h3><p>The binary file was packed by using UPX, to unpack it, run the command below</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">upx -d ./unpackme-upx\n                       Ultimate Packer <span class=\"token keyword\">for</span> eXecutables\n                          Copyright <span class=\"token punctuation\">(</span>C<span class=\"token punctuation\">)</span> <span class=\"token number\">1996</span> - <span class=\"token number\">2018</span>\nUPX <span class=\"token number\">3.95</span>        Markus Oberhumer, Laszlo Molnar <span class=\"token operator\">&amp;</span> John Reiser   Aug 26th <span class=\"token number\">2018</span>\n\n        File size         Ratio      Format      Name\n   --------------------   ------   -----------   -----------\n   <span class=\"token number\">1002408</span> <span class=\"token operator\">&lt;</span>-    <span class=\"token number\">439736</span>   <span class=\"token number\">43.87</span>%   linux/amd64   unpackme-upx\n\nUnpacked <span class=\"token number\">1</span> file.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>Like the previous challenge, From the decompiled</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>local_44 <span class=\"token operator\">==</span> <span class=\"token number\">754635</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\tlocal_40 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">rotate_encrypt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>local_38<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">fputs</span><span class=\"token punctuation\">(</span>local_40<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>FILE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token constant\">stdout</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">putchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">free</span><span class=\"token punctuation\">(</span>local_40<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>picoCTF{up&gt;&lt;_m3_f7w_77ad107e}</p></blockquote>\n<h3 id=\"Keygenme\"><a href=\"#Keygenme\" class=\"headerlink\" title=\"Keygenme\"></a>Keygenme</h3><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token function\">strcpy</span><span class=\"token punctuation\">(</span>half_flag<span class=\"token punctuation\">,</span> <span class=\"token string\">\"picoCTF&#123;br1ng_y0ur_0wn_k3y_\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// half_flag_len = 27</span>\n                                                <span class=\"token comment\">// flag_len = 37</span>\n                                                <span class=\"token comment\">// </span>\n  <span class=\"token function\">strcpy</span><span class=\"token punctuation\">(</span>v8<span class=\"token punctuation\">,</span> <span class=\"token string\">\"&#125;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>half_flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                            <span class=\"token comment\">// 27</span>\n  <span class=\"token function\">MD5</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>v8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                                   <span class=\"token comment\">// 1</span>\n  <span class=\"token function\">MD5</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>From the code above, we can see half of the flag</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">picoCTF&#123;br1ng_y0ur_0wn_k3y_<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">full_flag<span class=\"token punctuation\">[</span><span class=\"token number\">59</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> half_flag<span class=\"token punctuation\">[</span><span class=\"token number\">45</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nfull_flag<span class=\"token punctuation\">[</span><span class=\"token number\">60</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> half_flag<span class=\"token punctuation\">[</span><span class=\"token number\">50</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nfull_flag<span class=\"token punctuation\">[</span><span class=\"token number\">61</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v10<span class=\"token punctuation\">;</span>\nfull_flag<span class=\"token punctuation\">[</span><span class=\"token number\">62</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> half_flag<span class=\"token punctuation\">[</span><span class=\"token number\">33</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nfull_flag<span class=\"token punctuation\">[</span><span class=\"token number\">63</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> half_flag<span class=\"token punctuation\">[</span><span class=\"token number\">46</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nfull_flag<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> half_flag<span class=\"token punctuation\">[</span><span class=\"token number\">56</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nfull_flag<span class=\"token punctuation\">[</span><span class=\"token number\">65</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> half_flag<span class=\"token punctuation\">[</span><span class=\"token number\">58</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nfull_flag<span class=\"token punctuation\">[</span><span class=\"token number\">66</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v10<span class=\"token punctuation\">;</span>\nfull_flag<span class=\"token punctuation\">[</span><span class=\"token number\">67</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v8<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>The value of each of these index in memory is equal to</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">0x7d\n0x39\n0x38\n0x33\n0x36\n0x63\n0x64\n0x38<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>using Python to concat it</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">n <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0x7d</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x39</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x63</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x64</span> <span class=\"token punctuation\">,</span><span class=\"token number\">0x38</span><span class=\"token punctuation\">]</span>\nn<span class=\"token punctuation\">.</span>reverse<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token string\">\"\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 8dc6389&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>picoCTF{br1ng_y0ur_0wn_k3y_19836cd8}</p></blockquote>\n","feature":true,"text":"picoCTF is the largest cybersecurity hacking competition for middle and high school students. Participants 13 years and older of all skill l...","link":"","photos":[],"count_time":{"symbolsCount":"6.8k","symbolsTime":"6 mins."},"categories":[{"name":"CTF","slug":"CTF","count":3,"path":"api/categories/CTF.json"},{"name":"Security","slug":"CTF/Security","count":3,"path":"api/categories/CTF/Security.json"}],"tags":[{"name":"Voynich","slug":"Voynich","count":3,"path":"api/tags/Voynich.json"},{"name":"CTF-Team","slug":"CTF-Team","count":3,"path":"api/tags/CTF-Team.json"},{"name":"CTF","slug":"CTF","count":2,"path":"api/tags/CTF.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Forensics\"><span class=\"toc-text\">Forensics</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#St3g0\"><span class=\"toc-text\">St3g0</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Redaction-gone-wrong\"><span class=\"toc-text\">Redaction gone wrong</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#File-types\"><span class=\"toc-text\">File types</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Reverse-Engineering\"><span class=\"toc-text\">Reverse Engineering</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#file-run1\"><span class=\"toc-text\">file-run1</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#file-run2\"><span class=\"toc-text\">file-run2</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#GDB-Test-Drive\"><span class=\"toc-text\">GDB Test Drive</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#patchme-py\"><span class=\"toc-text\">patchme.py</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Safe-Opener\"><span class=\"toc-text\">Safe Opener</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#bloat-py\"><span class=\"toc-text\">bloat.py</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Fresh-Java\"><span class=\"toc-text\">Fresh Java</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Bbbbloat\"><span class=\"toc-text\">Bbbbloat</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#unpackme\"><span class=\"toc-text\">unpackme</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Keygenme\"><span class=\"toc-text\">Keygenme</span></a></li></ol></li></ol>","author":{"name":"HSNHK","slug":"blog-author","avatar":"https://github.com/HSNHK.png?size=250","link":"/","description":"Computer student | interested in programming and security (OSCP && OSWE) | CTF Player | Red Team 🌱","socials":{"github":"https://github.com/HSNHK","twitter":"https://twitter.com/0xHSNHK","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"medium":{"icon":"https://img.icons8.com/color/344/medium-logo.png","link":"https://hsnhk.medium.com/"}}}},"mapped":true,"prev_post":{"title":"Windows Red Team Cheat Sheet","uid":"4da614f2089b6628415f50fed745da80","slug":"WinRedTeamCheatSheet","date":"2022-04-20T08:21:13.000Z","updated":"2022-04-20T09:40:01.985Z","comments":true,"path":"api/articles/WinRedTeamCheatSheet.json","keywords":"security, ctf, redteam, programming, hacking, python, golang, linux, windows, hackthebox, ctftime","cover":"/post/WinRedTeamCheatSheet/cover.jpg","text":"List of tools and techniques required by the red team. TIP The contents of this post have been collected from various books and repositories...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"RedTeam","slug":"RedTeam","count":1,"path":"api/categories/RedTeam.json"},{"name":"Security","slug":"RedTeam/Security","count":1,"path":"api/categories/RedTeam/Security.json"}],"tags":[{"name":"Security","slug":"Security","count":1,"path":"api/tags/Security.json"},{"name":"RedTeam","slug":"RedTeam","count":1,"path":"api/tags/RedTeam.json"}],"author":{"name":"HSNHK","slug":"blog-author","avatar":"https://github.com/HSNHK.png?size=250","link":"/","description":"Computer student | interested in programming and security (OSCP && OSWE) | CTF Player | Red Team 🌱","socials":{"github":"https://github.com/HSNHK","twitter":"https://twitter.com/0xHSNHK","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"medium":{"icon":"https://img.icons8.com/color/344/medium-logo.png","link":"https://hsnhk.medium.com/"}}}},"feature":true},"next_post":{}}